name: Android CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build-type: [debug, release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Show build environment info
      run: |
        echo "Java version:"
        java -version
        echo "Gradle wrapper version:"
        ./gradlew --version
        echo "Android SDK info:"
        echo $ANDROID_HOME
        echo "Available build tools:"
        ls -la $ANDROID_HOME/build-tools/ || echo "Build tools directory not found"
        echo "Project structure:"
        find . -name "*.gradle*" -o -name "AndroidManifest.xml" | head -10

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Run tests
      run: ./gradlew test --stacktrace --info --scan

    - name: Build ${{ matrix.build-type }} APK
      run: ./gradlew assemble${{ matrix.build-type == 'debug' && 'Debug' || 'Release' }} --stacktrace --info --scan

    - name: Upload ${{ matrix.build-type }} APK
      uses: actions/upload-artifact@v4
      with:
        name: grohon-pdf-reader-${{ matrix.build-type }}
        path: app/build/outputs/apk/${{ matrix.build-type }}/*.apk
        retention-days: 30

    - name: Upload build reports
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-${{ matrix.build-type }}
        path: |
          app/build/reports/
          app/build/outputs/logs/
          build/reports/
          ~/.gradle/daemon/
          gradle/wrapper/
        retention-days: 7

    - name: Show build logs on failure
      if: failure()
      run: |
        echo "=== Gradle daemon logs ==="
        find ~/.gradle/daemon -name "*.log" -exec echo "File: {}" \; -exec cat {} \; || echo "No daemon logs found"
        echo "=== Build reports ==="
        find . -name "*.log" -path "*/build/*" -exec echo "File: {}" \; -exec cat {} \; || echo "No build logs found"
        echo "=== Compilation errors ==="
        find . -name "*.txt" -path "*/build/tmp/*" -exec echo "File: {}" \; -exec cat {} \; || echo "No compilation logs found"

  release:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download release APK
      uses: actions/download-artifact@v4
      with:
        name: grohon-pdf-reader-release
        path: ./apk

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: ./apk/*.apk
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}